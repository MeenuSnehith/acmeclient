{"ast":null,"code":"import ConfigService from '@/services/ConfigService';\nexport default {\n  data: () => ({\n    form: false,\n    loadingOverlay: false,\n    custOverlay: false,\n    snackbar: false,\n    timeout: 2000,\n    distance: 0,\n    distanceID: 0,\n    time: 0,\n    timeID: 0,\n    org: \"C3\",\n    customers: []\n  }),\n  methods: {\n    async getConfig() {\n      this.loadingOverlay = true;\n      console.log(\"Distance: \" + this.distance + \":: Time\" + this.time);\n      try {\n        await ConfigService.getConfigs().then(response => {\n          console.log(response);\n          if (response.statusText == \"OK\") {\n            response.data.forEach(element => {\n              console.log(\"ID: \" + element.id);\n              if (element.name == \"Distance\") {\n                this.distance = element.value;\n                this.distanceID = element.id;\n              } else if (element.name == \"Time\") {\n                this.time = element.value;\n                this.timeID = element.Id;\n              }\n            });\n            console.log(\"Get config success.\");\n          }\n          this.loadingOverlay = false;\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    async updateConfig(configName) {\n      this.loadingOverlay = true;\n      let configValue = 0;\n      let configId = 0;\n      if (configName == \"Distance\") {\n        configValue = this.distance;\n        configId = this.distanceID;\n      } else if (configName == \"Time\") {\n        configValue = this.time;\n        configId = this.timeID;\n      } else {\n        return;\n      }\n      try {\n        await ConfigService.updateConfig({\n          name: configName,\n          value: configValue\n        }, configId).then(response => {\n          console.log(response);\n          this.loadingOverlay = false;\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  },\n  beforeMount() {\n    console.log(\"Add delivery start\");\n    this.getConfig();\n  },\n  watch: {}\n};","map":{"version":3,"names":["ConfigService","data","form","loadingOverlay","custOverlay","snackbar","timeout","distance","distanceID","time","timeID","org","customers","methods","getConfig","console","log","getConfigs","then","response","statusText","forEach","element","id","name","value","Id","err","updateConfig","configName","configValue","configId","beforeMount","watch"],"sources":["/Users/mahithareddyragi/Desktop/CourierSerivce/client/src/components/AddConfig.vue"],"sourcesContent":["<template>\n  <v-sheet>\n    <v-card class=\"mx-auto px-6 py-8\" max-width=\"100%\">\n      <v-form\n        v-model=\"form\"\n        @submit.prevent=\"onSubmit\"\n      >\n        <v-container>\n          <v-row>\n            <v-col\n              cols=\"12\"\n              md=\"6\"\n            >\n              <h5>Config</h5>\n              <v-text-field\n              v-model=\"distance\"\n              label=\"Distance\"\n              type=\"number\"\n              ></v-text-field>\n              <v-text-field\n              v-model=\"distanceID\"\n              label=\"distanceid\"\n              v-show=\"false\"\n            ></v-text-field>\n              <br/>\n              <v-text-field\n                v-model=\"time\"\n                label=\"Time in Mins\"\n                type=\"number\"\n              ></v-text-field>\n              <v-text-field\n                v-model=\"timeID\"\n                label=\"timeid\"\n                v-show=\"false\"\n              ></v-text-field>\n            </v-col>\n\n            <v-col\n              cols=\"12\"\n              md=\"6\"\n            >\n            <br/>\n              <v-btn\n              block\n              color=\"primary\"\n              size=\"large\"\n              variant=\"elevated\"\n              rounded=\"xl\"\n              @click=\"updateConfig('Distance')\"\n            >\n              Save Distance Config\n            </v-btn>\n            <br/>\n            <br/>\n            <br/>\n\n            <v-btn\n              block\n              color=\"primary\"\n              size=\"large\"\n              variant=\"elevated\"\n              rounded=\"xl\"\n              @click=\"updateConfig('Time')\"\n            >\n              Save Time Config\n            </v-btn>\n            </v-col>\n          </v-row>\n        </v-container>\n        \n        <br/>\n        \n      </v-form>\n    </v-card>\n\n    <v-overlay\n      :model-value=\"loadingOverlay\"\n      class=\"align-center justify-center\"\n      :persistent=\"diableOverlay\"\n    >\n      <v-progress-circular\n        color=\"primary\"\n        indeterminate\n        size=\"64\"\n      ></v-progress-circular>\n      <h3>{{loadingMSG}}</h3>\n    </v-overlay>\n\n    <v-snackbar\n      v-model=\"snackbar\"\n      :timeout=\"timeout\"\n    >\n      Save Success. Please wait while redirecting...\n    </v-snackbar>\n  </v-sheet>\n</template>\n\n<script>\nimport ConfigService from '@/services/ConfigService'\n\n  export default {\n    data: () => ({\n      form: false,\n      loadingOverlay: false,\n      custOverlay: false,\n      snackbar: false,\n      timeout: 2000,\n\n      distance: 0,\n      distanceID: 0,\n      time: 0,\n      timeID: 0,\n\n      org: \"C3\",\n\n      customers: []\n    }),\n\n    methods: {\n      async getConfig(){\n        this.loadingOverlay = true\n        console.log(\"Distance: \" + this.distance + \":: Time\" + this.time)\n        try{\n          await ConfigService.getConfigs().then((response) => {\n            console.log(response)\n            if(response.statusText == \"OK\"){\n              response.data.forEach(element => {\n                console.log(\"ID: \" + element.id)\n                if(element.name == \"Distance\"){\n                  this.distance = element.value\n                  this.distanceID = element.id\n                }\n                else if(element.name == \"Time\"){\n                  this.time = element.value\n                  this.timeID = element.Id\n                }\n              });\n              console.log(\"Get config success.\")\n            }\n            this.loadingOverlay = false\n          })\n        }\n        catch(err){\n          console.log(err)\n        }\n      },\n      async updateConfig(configName){\n        this.loadingOverlay = true\n        let configValue = 0\n        let configId = 0\n        if(configName == \"Distance\"){\n          configValue = this.distance\n          configId = this.distanceID\n        }\n        else if(configName == \"Time\"){\n          configValue = this.time\n          configId = this.timeID\n        }\n        else{\n          return;\n        }\n\n        try{\n          await ConfigService.updateConfig({\n            name: configName,\n            value: configValue\n          }, configId).then((response) => {\n            console.log(response)\n            this.loadingOverlay = false\n          })\n        }\n        catch(err){\n          console.log(err)\n        }\n      }\n    },\n    beforeMount() {\n      console.log(\"Add delivery start\")\n      this.getConfig()\n    },\n    watch: {\n    }\n  }\n</script>\n"],"mappings":"AAkGA,OAAOA,aAAY,MAAO,0BAAyB;AAEjD,eAAe;EACbC,IAAI,EAAEA,CAAA,MAAO;IACXC,IAAI,EAAE,KAAK;IACXC,cAAc,EAAE,KAAK;IACrBC,WAAW,EAAE,KAAK;IAClBC,QAAQ,EAAE,KAAK;IACfC,OAAO,EAAE,IAAI;IAEbC,QAAQ,EAAE,CAAC;IACXC,UAAU,EAAE,CAAC;IACbC,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE,CAAC;IAETC,GAAG,EAAE,IAAI;IAETC,SAAS,EAAE;EACb,CAAC,CAAC;EAEFC,OAAO,EAAE;IACP,MAAMC,SAASA,CAAA,EAAE;MACf,IAAI,CAACX,cAAa,GAAI,IAAG;MACzBY,OAAO,CAACC,GAAG,CAAC,YAAW,GAAI,IAAI,CAACT,QAAO,GAAI,SAAQ,GAAI,IAAI,CAACE,IAAI;MAChE,IAAG;QACD,MAAMT,aAAa,CAACiB,UAAU,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;UAClDJ,OAAO,CAACC,GAAG,CAACG,QAAQ;UACpB,IAAGA,QAAQ,CAACC,UAAS,IAAK,IAAI,EAAC;YAC7BD,QAAQ,CAAClB,IAAI,CAACoB,OAAO,CAACC,OAAM,IAAK;cAC/BP,OAAO,CAACC,GAAG,CAAC,MAAK,GAAIM,OAAO,CAACC,EAAE;cAC/B,IAAGD,OAAO,CAACE,IAAG,IAAK,UAAU,EAAC;gBAC5B,IAAI,CAACjB,QAAO,GAAIe,OAAO,CAACG,KAAI;gBAC5B,IAAI,CAACjB,UAAS,GAAIc,OAAO,CAACC,EAAC;cAC7B,OACK,IAAGD,OAAO,CAACE,IAAG,IAAK,MAAM,EAAC;gBAC7B,IAAI,CAACf,IAAG,GAAIa,OAAO,CAACG,KAAI;gBACxB,IAAI,CAACf,MAAK,GAAIY,OAAO,CAACI,EAAC;cACzB;YACF,CAAC,CAAC;YACFX,OAAO,CAACC,GAAG,CAAC,qBAAqB;UACnC;UACA,IAAI,CAACb,cAAa,GAAI,KAAI;QAC5B,CAAC;MACH,EACA,OAAMwB,GAAG,EAAC;QACRZ,OAAO,CAACC,GAAG,CAACW,GAAG;MACjB;IACF,CAAC;IACD,MAAMC,YAAYA,CAACC,UAAU,EAAC;MAC5B,IAAI,CAAC1B,cAAa,GAAI,IAAG;MACzB,IAAI2B,WAAU,GAAI;MAClB,IAAIC,QAAO,GAAI;MACf,IAAGF,UAAS,IAAK,UAAU,EAAC;QAC1BC,WAAU,GAAI,IAAI,CAACvB,QAAO;QAC1BwB,QAAO,GAAI,IAAI,CAACvB,UAAS;MAC3B,OACK,IAAGqB,UAAS,IAAK,MAAM,EAAC;QAC3BC,WAAU,GAAI,IAAI,CAACrB,IAAG;QACtBsB,QAAO,GAAI,IAAI,CAACrB,MAAK;MACvB,OACI;QACF;MACF;MAEA,IAAG;QACD,MAAMV,aAAa,CAAC4B,YAAY,CAAC;UAC/BJ,IAAI,EAAEK,UAAU;UAChBJ,KAAK,EAAEK;QACT,CAAC,EAAEC,QAAQ,CAAC,CAACb,IAAI,CAAEC,QAAQ,IAAK;UAC9BJ,OAAO,CAACC,GAAG,CAACG,QAAQ;UACpB,IAAI,CAAChB,cAAa,GAAI,KAAI;QAC5B,CAAC;MACH,EACA,OAAMwB,GAAG,EAAC;QACRZ,OAAO,CAACC,GAAG,CAACW,GAAG;MACjB;IACF;EACF,CAAC;EACDK,WAAWA,CAAA,EAAG;IACZjB,OAAO,CAACC,GAAG,CAAC,oBAAoB;IAChC,IAAI,CAACF,SAAS,CAAC;EACjB,CAAC;EACDmB,KAAK,EAAE,CACP;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}