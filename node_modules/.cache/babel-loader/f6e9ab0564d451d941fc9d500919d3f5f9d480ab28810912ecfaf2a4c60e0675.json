{"ast":null,"code":"import { mergeProps as _mergeProps, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VDivider } from \"../VDivider/index.mjs\";\nimport { VListGroup } from \"./VListGroup.mjs\";\nimport { VListItem } from \"./VListItem.mjs\";\nimport { VListSubheader } from \"./VListSubheader.mjs\"; // Utilities\nimport { createList } from \"./list.mjs\";\nimport { genericComponent, propsFactory } from \"../../util/index.mjs\"; // Types\nexport const makeVListChildrenProps = propsFactory({\n  items: Array\n}, 'v-list-children');\nexport const VListChildren = genericComponent()({\n  name: 'VListChildren',\n  props: makeVListChildrenProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    createList();\n    return () => slots.default?.() ?? props.items?.map(_ref2 => {\n      let {\n        children,\n        props: itemProps,\n        type,\n        raw: item\n      } = _ref2;\n      if (type === 'divider') {\n        return slots.divider?.({\n          props: itemProps\n        }) ?? _createVNode(VDivider, itemProps, null);\n      }\n      if (type === 'subheader') {\n        return slots.subheader?.({\n          props: itemProps\n        }) ?? _createVNode(VListSubheader, itemProps, {\n          default: slots.subheader\n        });\n      }\n      const slotsWithItem = {\n        subtitle: slots.subtitle ? slotProps => slots.subtitle?.({\n          ...slotProps,\n          item\n        }) : undefined,\n        prepend: slots.prepend ? slotProps => slots.prepend?.({\n          ...slotProps,\n          item\n        }) : undefined,\n        append: slots.append ? slotProps => slots.append?.({\n          ...slotProps,\n          item\n        }) : undefined,\n        default: slots.default ? slotProps => slots.default?.({\n          ...slotProps,\n          item\n        }) : undefined,\n        title: slots.title ? slotProps => slots.title?.({\n          ...slotProps,\n          item\n        }) : undefined\n      };\n      const [listGroupProps, _1] = VListGroup.filterProps(itemProps);\n      return children ? _createVNode(VListGroup, _mergeProps({\n        \"value\": itemProps?.value\n      }, listGroupProps), {\n        activator: _ref3 => {\n          let {\n            props: activatorProps\n          } = _ref3;\n          return slots.header ? slots.header({\n            props: {\n              ...itemProps,\n              ...activatorProps\n            }\n          }) : _createVNode(VListItem, _mergeProps(itemProps, activatorProps), slotsWithItem);\n        },\n        default: () => _createVNode(VListChildren, {\n          \"items\": children\n        }, slots)\n      }) : slots.item ? slots.item(itemProps) : _createVNode(VListItem, itemProps, slotsWithItem);\n    });\n  }\n});","map":{"version":3,"names":["VDivider","VListGroup","VListItem","VListSubheader","createList","genericComponent","propsFactory","makeVListChildrenProps","items","Array","VListChildren","name","props","setup","_ref","slots","default","map","_ref2","children","itemProps","type","raw","item","divider","_createVNode","subheader","slotsWithItem","subtitle","slotProps","undefined","prepend","append","title","listGroupProps","_1","filterProps","_mergeProps","value","activator","_ref3","activatorProps","header"],"sources":["../../../src/components/VList/VListChildren.tsx"],"sourcesContent":["// Components\nimport { VDivider } from '../VDivider'\nimport { VListGroup } from './VListGroup'\nimport { VListItem } from './VListItem'\nimport { VListSubheader } from './VListSubheader'\n\n// Utilities\nimport { createList } from './list'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { InternalListItem } from './VList'\nimport type { VListItemSlots } from './VListItem'\nimport type { GenericProps } from '@/util'\nimport type { PropType } from 'vue'\n\nexport type VListChildrenSlots<T> = {\n  [K in keyof VListItemSlots]: VListItemSlots[K] & [{ item: T }]\n} & {\n  item: [T]\n  divider: [{ props: T }]\n  subheader: [{ props: T }]\n}\n\nexport const makeVListChildrenProps = propsFactory({\n  items: Array as PropType<InternalListItem[]>,\n}, 'v-list-children')\n\nexport const VListChildren = genericComponent<new <T extends InternalListItem>(props: {\n  items?: T[]\n}) => GenericProps<typeof props, VListChildrenSlots<T>>>()({\n  name: 'VListChildren',\n\n  props: makeVListChildrenProps(),\n\n  setup (props, { slots }) {\n    createList()\n\n    return () => slots.default?.() ?? props.items?.map(({ children, props: itemProps, type, raw: item }) => {\n      if (type === 'divider') {\n        return slots.divider?.({ props: itemProps }) ?? (\n          <VDivider { ...itemProps } />\n        )\n      }\n\n      if (type === 'subheader') {\n        return slots.subheader?.({ props: itemProps }) ?? (\n          <VListSubheader\n            { ...itemProps }\n            v-slots={{ default: slots.subheader }}\n          />\n        )\n      }\n\n      const slotsWithItem = {\n        subtitle: slots.subtitle ? (slotProps: any) => slots.subtitle?.({ ...slotProps, item }) : undefined,\n        prepend: slots.prepend ? (slotProps: any) => slots.prepend?.({ ...slotProps, item }) : undefined,\n        append: slots.append ? (slotProps: any) => slots.append?.({ ...slotProps, item }) : undefined,\n        default: slots.default ? (slotProps: any) => slots.default?.({ ...slotProps, item }) : undefined,\n        title: slots.title ? (slotProps: any) => slots.title?.({ ...slotProps, item }) : undefined,\n      }\n\n      const [listGroupProps, _1] = VListGroup.filterProps(itemProps)\n\n      return children ? (\n        <VListGroup\n          value={ itemProps?.value }\n          { ...listGroupProps }\n        >\n          {{\n            activator: ({ props: activatorProps }) => slots.header\n              ? slots.header({ props: { ...itemProps, ...activatorProps } })\n              : <VListItem { ...itemProps } { ...activatorProps } v-slots={ slotsWithItem } />,\n            default: () => (\n              <VListChildren items={ children } v-slots={ slots } />\n            ),\n          }}\n        </VListGroup>\n      ) : (\n        slots.item ? slots.item(itemProps) : (\n          <VListItem\n            { ...itemProps }\n            v-slots={ slotsWithItem }\n          />\n        )\n      )\n    })\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}