{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nimport AuthenticationService from '@/services/UserAuthenticationService';\nexport default {\n  data: () => ({\n    form: false,\n    username: null,\n    password: null,\n    passwordConfirm: null,\n    loading: false,\n    showAlert: false,\n    alertMessage: \"\",\n    snackbar: false,\n    timeout: 2000\n  }),\n  methods: {\n    onSubmit() {\n      if (!this.form) return;\n      this.loading = true;\n      setTimeout(() => this.loading = false, 2000);\n    },\n    required(v) {\n      return !!v || 'Field is required';\n    },\n    async registerClick() {\n      try {\n        await AuthenticationService.register({\n          username: this.username,\n          password: this.password,\n          permission: \"user\"\n        }).then(response => {\n          console.log(response);\n          if (response.statusText == \"OK\") {\n            this.$store.commit('setUserName', response.data.username);\n            this.$store.commit('setPermission', response.data.permission);\n            this.$store.commit('setIsUserLoggedIn', true);\n            console.log(this.$store.state.username);\n            console.log(this.$store.state.permission);\n            console.log(this.$store.state.isUserLoggedIn);\n            this.clearFields();\n            this.snackbar = true;\n            setTimeout(() => router.push('/'), 2000);\n          }\n        });\n      } catch (err) {\n        console.log(err);\n        console.log(err.response.data.error);\n        this.showError(err.response.data.error);\n      }\n    },\n    clearFields() {\n      this.password = \"\";\n      this.username = \"\";\n      this.passwordConfirm = \"\";\n    },\n    showError(errorText) {\n      this.alertMessage = errorText;\n      this.showAlert = true;\n    }\n  },\n  watch: {\n    password: function () {\n      if (this.password != this.passwordConfirm) {\n        this.showError(\"Password and Confirm Password must be same\");\n      } else {\n        this.showAlert = false;\n      }\n    },\n    passwordConfirm: function () {\n      if (this.password != this.passwordConfirm) {\n        this.showError(\"Password and Confirm Password must be same\");\n      } else {\n        this.showAlert = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["router","AuthenticationService","data","form","username","password","passwordConfirm","loading","showAlert","alertMessage","snackbar","timeout","methods","onSubmit","setTimeout","required","v","registerClick","register","permission","then","response","console","log","statusText","$store","commit","state","isUserLoggedIn","clearFields","push","err","error","showError","errorText","watch"],"sources":["/Users/mahithareddyragi/Desktop/CourierSerivce/client/src/components/RegisterUser.vue"],"sourcesContent":["<template>\n  <v-sheet>\n    <h1 class=\"text-center\">Register</h1>\n    <br/>\n    <v-card class=\"mx-auto px-6 py-8\" max-width=\"344\">\n      <v-form\n        v-model=\"form\"\n        @submit.prevent=\"onSubmit\"\n      >\n        <v-text-field\n          v-model=\"username\"\n          :readonly=\"loading\"\n          :rules=\"[required]\"\n          class=\"mb-2\"\n          clearable\n          label=\"Username\"\n        ></v-text-field>\n\n        <v-text-field\n          v-model=\"password\"\n          :readonly=\"loading\"\n          :rules=\"[required]\"\n          clearable\n          label=\"Password\"\n          placeholder=\"Enter your password\"\n          onch\n        ></v-text-field>\n\n        <v-text-field\n          v-model=\"passwordConfirm\"\n          :readonly=\"loading\"\n          :rules=\"[required]\"\n          clearable\n          label=\"Confirm Password\"\n          placeholder=\"Enter your password\"\n        ></v-text-field>\n\n        <v-alert\n          variant=\"outlined\"\n          type=\"warning\"\n          prominent\n          border=\"top\"\n          value=\"passwordAlert\"\n          v-show=\"showAlert\"\n        >\n          {{alertMessage}}\n        </v-alert>\n        \n        <br/>\n\n        <v-btn\n          :disabled=\"!form\"\n          :loading=\"loading\"\n          block\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          variant=\"elevated\"\n          rounded=\"xl\"\n          @click=\"registerClick\"\n        >\n          Register\n        </v-btn>\n        <br/>\n\n        <v-btn\n          block\n          color=\"primary\"\n          size=\"small\"\n          variant=\"plain\"\n          rounded=\"xl\"\n          to= \"/\"\n        >\n          Go to Home\n        </v-btn>\n\n      </v-form>\n    </v-card>\n\n    <v-snackbar\n      v-model=\"snackbar\"\n      :timeout=\"timeout\"\n    >\n      Registeration Success. Please wait while redirecting...\n    </v-snackbar>\n\n  </v-sheet>\n</template>\n\n<script>\nimport router from '../router'\nimport AuthenticationService from '@/services/UserAuthenticationService'\n\n  export default {\n    data: () => ({\n      form: false,\n      username: null,\n      password: null,\n      passwordConfirm: null,\n      loading: false,\n      showAlert: false,\n      alertMessage: \"\",\n      snackbar: false,\n      timeout: 2000,\n    }),\n\n    methods: {\n      onSubmit () {\n        if (!this.form) return\n\n        this.loading = true\n\n        setTimeout(() => (this.loading = false), 2000)\n      },\n      required (v) {\n        return !!v || 'Field is required'\n      },\n      async registerClick(){\n        try{\n          await AuthenticationService.register({\n              username: this.username,\n              password: this.password,\n              permission: \"user\"\n          }).then((response)=> {\n                console.log(response)\n                if(response.statusText == \"OK\"){\n                  this.$store.commit('setUserName', response.data.username)\n                  this.$store.commit('setPermission', response.data.permission)\n                  this.$store.commit('setIsUserLoggedIn', true)\n                  console.log(this.$store.state.username)\n                  console.log(this.$store.state.permission)\n                  console.log(this.$store.state.isUserLoggedIn)\n                  this.clearFields()\n                  this.snackbar = true\n                  setTimeout(() => (router.push('/')), 2000)\n                }\n              }\n          )\n        }\n        catch(err){\n          console.log(err)\n          console.log(err.response.data.error)\n          this.showError(err.response.data.error)\n        }\n      },\n      clearFields(){\n        this.password = \"\"\n        this.username = \"\"\n        this.passwordConfirm = \"\"\n      },\n      showError(errorText){\n        this.alertMessage = errorText;\n        this.showAlert = true;\n      }\n    },\n    watch: {\n    password: function () {\n      if(this.password != this.passwordConfirm){\n        this.showError(\"Password and Confirm Password must be same\")\n      }\n      else{\n        this.showAlert = false;\n      }\n    },\n    passwordConfirm: function () {\n      if(this.password != this.passwordConfirm){\n        this.showError(\"Password and Confirm Password must be same\")\n      }\n      else{\n        this.showAlert = false;\n      }\n    }\n  }\n  }\n</script>\n"],"mappings":";AA0FA,OAAOA,MAAK,MAAO,WAAU;AAC7B,OAAOC,qBAAoB,MAAO,sCAAqC;AAErE,eAAe;EACbC,IAAI,EAAEA,CAAA,MAAO;IACXC,IAAI,EAAE,KAAK;IACXC,QAAQ,EAAE,IAAI;IACdC,QAAQ,EAAE,IAAI;IACdC,eAAe,EAAE,IAAI;IACrBC,OAAO,EAAE,KAAK;IACdC,SAAS,EAAE,KAAK;IAChBC,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE,KAAK;IACfC,OAAO,EAAE;EACX,CAAC,CAAC;EAEFC,OAAO,EAAE;IACPC,QAAOA,CAAA,EAAK;MACV,IAAI,CAAC,IAAI,CAACV,IAAI,EAAE;MAEhB,IAAI,CAACI,OAAM,GAAI,IAAG;MAElBO,UAAU,CAAC,MAAO,IAAI,CAACP,OAAM,GAAI,KAAM,EAAE,IAAI;IAC/C,CAAC;IACDQ,QAAOA,CAAGC,CAAC,EAAE;MACX,OAAO,CAAC,CAACA,CAAA,IAAK,mBAAkB;IAClC,CAAC;IACD,MAAMC,aAAaA,CAAA,EAAE;MACnB,IAAG;QACD,MAAMhB,qBAAqB,CAACiB,QAAQ,CAAC;UACjCd,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBc,UAAU,EAAE;QAChB,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAI;UACfC,OAAO,CAACC,GAAG,CAACF,QAAQ;UACpB,IAAGA,QAAQ,CAACG,UAAS,IAAK,IAAI,EAAC;YAC7B,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,aAAa,EAAEL,QAAQ,CAACnB,IAAI,CAACE,QAAQ;YACxD,IAAI,CAACqB,MAAM,CAACC,MAAM,CAAC,eAAe,EAAEL,QAAQ,CAACnB,IAAI,CAACiB,UAAU;YAC5D,IAAI,CAACM,MAAM,CAACC,MAAM,CAAC,mBAAmB,EAAE,IAAI;YAC5CJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,MAAM,CAACE,KAAK,CAACvB,QAAQ;YACtCkB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,MAAM,CAACE,KAAK,CAACR,UAAU;YACxCG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,MAAM,CAACE,KAAK,CAACC,cAAc;YAC5C,IAAI,CAACC,WAAW,CAAC;YACjB,IAAI,CAACnB,QAAO,GAAI,IAAG;YACnBI,UAAU,CAAC,MAAOd,MAAM,CAAC8B,IAAI,CAAC,GAAG,CAAE,EAAE,IAAI;UAC3C;QACF,CACJ;MACF,EACA,OAAMC,GAAG,EAAC;QACRT,OAAO,CAACC,GAAG,CAACQ,GAAG;QACfT,OAAO,CAACC,GAAG,CAACQ,GAAG,CAACV,QAAQ,CAACnB,IAAI,CAAC8B,KAAK;QACnC,IAAI,CAACC,SAAS,CAACF,GAAG,CAACV,QAAQ,CAACnB,IAAI,CAAC8B,KAAK;MACxC;IACF,CAAC;IACDH,WAAWA,CAAA,EAAE;MACX,IAAI,CAACxB,QAAO,GAAI,EAAC;MACjB,IAAI,CAACD,QAAO,GAAI,EAAC;MACjB,IAAI,CAACE,eAAc,GAAI,EAAC;IAC1B,CAAC;IACD2B,SAASA,CAACC,SAAS,EAAC;MAClB,IAAI,CAACzB,YAAW,GAAIyB,SAAS;MAC7B,IAAI,CAAC1B,SAAQ,GAAI,IAAI;IACvB;EACF,CAAC;EACD2B,KAAK,EAAE;IACP9B,QAAQ,EAAE,SAAAA,CAAA,EAAY;MACpB,IAAG,IAAI,CAACA,QAAO,IAAK,IAAI,CAACC,eAAe,EAAC;QACvC,IAAI,CAAC2B,SAAS,CAAC,4CAA4C;MAC7D,OACI;QACF,IAAI,CAACzB,SAAQ,GAAI,KAAK;MACxB;IACF,CAAC;IACDF,eAAe,EAAE,SAAAA,CAAA,EAAY;MAC3B,IAAG,IAAI,CAACD,QAAO,IAAK,IAAI,CAACC,eAAe,EAAC;QACvC,IAAI,CAAC2B,SAAS,CAAC,4CAA4C;MAC7D,OACI;QACF,IAAI,CAACzB,SAAQ,GAAI,KAAK;MACxB;IACF;EACF;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}